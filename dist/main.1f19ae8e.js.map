{"version":3,"sources":["../node_modules/three/build/three.module.js","main.js","../node_modules/.pnpm/registry.npmmirror.com+parcel-bundler@1.12.5/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","legacyMode","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_super2","_this3","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","depthTexture","samples","texture","setSize","WebGLRenderTarget","_RenderTarget","_super3","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_super4","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super5","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super6","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super7","_this8","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super8","_this9","count","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$b","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$a","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$9","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super9","_this10","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","remove","removeFromParent","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","result","childResult","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_super10","_this11","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_super11","_this12","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$8","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRange","gpuType","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super12","Uint8BufferAttribute","_BufferAttribute2","_super13","Uint8ClampedBufferAttribute","_BufferAttribute3","_super14","Int16BufferAttribute","_BufferAttribute4","_super15","Uint16BufferAttribute","_BufferAttribute5","_super16","Int32BufferAttribute","_BufferAttribute6","_super17","Uint32BufferAttribute","_BufferAttribute7","_super18","Float16BufferAttribute","_BufferAttribute8","_super19","_this13","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super20","Float64BufferAttribute","_BufferAttribute10","_super21","_id$2","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$7","BufferGeometry","_EventDispatcher5","_super22","_this14","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$5","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super23","_this15","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super24","_this16","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super25","_this17","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super26","_this18","PerspectiveCamera","_Camera","_super27","_this19","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super28","renderTarget","_this20","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super29","_this21","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super30","_this22","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$4","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super31","_this23","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super32","_this24","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super33","_this25","isMeshDepthMaterial","_Material4","_super34","_this26","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","compareFunction","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super35","_this27","isArrayCamera","Group","_Object3D4","_super36","_this28","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","DepthTexture","_Texture4","_super37","_this29","WebXRManager","_EventDispatcher6","_super38","_this30","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","setTimeout","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","WebGL1Renderer","_WebGLRenderer","_super39","FogExp2","Fog","Scene","_Object3D5","_super40","_this31","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$5","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super41","_this32","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super42","_this33","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super43","_this34","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$3","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super44","_this35","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super45","_this36","isBone","DataTexture","_Texture5","_super46","_this37","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super47","_this38","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh","_sphere$2","InstancedMesh","_Mesh2","_super48","_this39","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","_Material6","_super49","_this40","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super50","_this41","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super51","_this42","LineLoop","_Line2","_super52","_this43","_Material7","_super53","_this44","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super54","_this45","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super55","video","_this46","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super56","_this47","CompressedTexture","_Texture8","_super57","_this48","CompressedArrayTexture","_CompressedTexture","_super58","_this49","CompressedCubeTexture","_CompressedTexture2","_super59","_this50","isCompressedCubeTexture","CanvasTexture","_Texture9","_super60","_this51","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_super61","_this52","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super62","aRadius","_this53","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super63","_this54","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super64","_this55","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super65","_this56","isCubicBezierCurve3","LineCurve","_Curve5","_super66","_this57","isLineCurve","LineCurve3","_Curve6","_super67","_this58","isLineCurve3","QuadraticBezierCurve","_Curve7","_super68","_this59","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super69","_this60","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super70","_this61","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super71","_this62","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super72","_this63","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super73","_this64","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super74","_this65","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_super75","_this66","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_super76","_this67","radiusTop","radiusBottom","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super77","_this68","PolyhedronGeometry","_BufferGeometry6","_super78","_this69","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super79","_this70","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super80","_this71","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super81","_this72","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super82","_this73","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super83","_this74","OctahedronGeometry","_PolyhedronGeometry3","_super84","_this75","RingGeometry","_BufferGeometry9","_super85","_this76","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super86","_this77","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super87","_this78","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super88","_this79","TorusGeometry","_BufferGeometry12","_super89","_this80","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_super90","_this81","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super91","_this82","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super92","_this83","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super93","_this84","RawShaderMaterial","_ShaderMaterial","_super94","_this85","_Material9","_super95","_this86","_MeshStandardMaterial","_super96","_this87","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_Material10","_super97","_this88","_Material11","_super98","_this89","_Material12","_super99","_this90","_Material13","_super100","_this91","_Material14","_super101","_this92","_LineBasicMaterial","_super102","_this93","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super103","_this94","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super104","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super105","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super106","ColorKeyframeTrack","_KeyframeTrack2","_super107","NumberKeyframeTrack","_KeyframeTrack3","_super108","QuaternionLinearInterpolant","_Interpolant4","_super109","QuaternionKeyframeTrack","_KeyframeTrack4","_super110","StringKeyframeTrack","_KeyframeTrack5","_super111","VectorKeyframeTrack","_KeyframeTrack6","_super112","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super113","response","_this95","_wrapNativeSuper","FileLoader","_Loader","_super114","_this96","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref2","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super115","CompressedTextureLoader","_Loader3","_super116","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super117","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super118","urls","DataTextureLoader","_Loader6","_super119","texData","TextureLoader","_Loader7","_super120","Light","_Object3D11","_super121","_this97","HemisphereLight","_Light","_super122","_this98","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super123","_this99","isSpotLightShadow","SpotLight","_Light2","_super124","_this100","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super125","_this101","_cubeDirections","_cubeUps","PointLight","_Light3","_super126","_this102","DirectionalLightShadow","_LightShadow3","_super127","_this103","isDirectionalLightShadow","DirectionalLight","_Light4","_super128","_this104","AmbientLight","_Light5","_super129","_this105","RectAreaLight","_Light6","_super130","_this106","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super131","_this107","MaterialLoader","_Loader8","_super132","_this108","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super133","_this109","BufferGeometryLoader","_Loader9","_super134","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super135","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super136","_this110","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super137","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super138","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super139","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super140","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super141","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_super142","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super143","_this116","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super144","_this117","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super145","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","_super146","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super147","_this120","GridHelper","_LineSegments2","_super148","_this121","PolarGridHelper","_LineSegments3","_super149","_this122","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super150","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super151","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super152","_this125","Box3Helper","_LineSegments6","_super153","_this126","PlaneHelper","_Line3","_super154","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super155","_this128","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_super156","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","THREE","_interopRequireWildcard","require","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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AE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EA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","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '158';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0\n\t\t}, options );\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps;\n\t\tthis.texture.internalFormat = options.internalFormat;\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$b.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$b );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$b.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$a.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$a );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$a.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$a.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$3.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$3.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$a );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$a.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$a ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$a ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$9 ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$9.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$9.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$9.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$9.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$9.dot( this.direction );\n\t\tconst d2 = _vector$9.dot( _vector$9 ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$9 ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value ) {\n\n\t\tlet result = [];\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$8 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\t\t\t\t_vector$8.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$7.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$7.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$7.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$7.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$5.copy( geometry.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$5.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$5, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$4.center.set( 0, 0, 0 );\n\t\t_sphere$4.radius = 0.7071067811865476;\n\t\t_sphere$4.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tanisotropyV /= material.anisotropy;\\n\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = ( isWebGL2 === true ) ? _gl.DEPTH_COMPONENT24 : _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\treturn ! this.useLegacyLights;\n\n\t}\n\n\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\tthis.useLegacyLights = ! value;\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$2.copy( this.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t}, handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement, sRGBEncoding };\n","import * as THREE from 'three';\n\nconsole.log(THREE);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}